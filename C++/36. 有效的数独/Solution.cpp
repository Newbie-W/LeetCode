/*
直接暴力写了，思路就是，使用map存数再看有无重复。先行，后列，再3x3方阵的比较。

执行用时：28 ms, 在所有 C++ 提交中击败了22.75%的用户
内存消耗：8.6 MB, 在所有 C++ 提交中击败了100.00%的用户
*/
/*
用例：
[["5","3",".",".","7",".",".",".","."],["6",".",".","1","9","5",".",".","."],[".","9","8",".",".",".",".","6","."],["8",".",".",".","6",".",".",".","3"],["4",".",".","8",".","3",".",".","1"],["7",".",".",".","2",".",".",".","6"],[".","6",".",".",".",".","2","8","."],[".",".",".","4","1","9",".",".","5"],[".",".",".",".","8",".",".","7","9"]]
[["8","3",".",".","7",".",".",".","."],["6",".",".","1","9","5",".",".","."],[".","9","8",".",".",".",".","6","."],["8",".",".",".","6",".",".",".","3"],["4",".",".","8",".","3",".",".","1"],["7",".",".",".","2",".",".",".","6"],[".","6",".",".",".",".","2","8","."],[".",".",".","4","1","9",".",".","5"],[".",".",".",".","8",".",".","7","9"]]
[["8","3",".",".","7",".",".",".","."],["6",".",".","1","9","5",".",".","."],[".","9","8",".",".",".",".","6","."],["5",".",".",".","6",".",".",".","3"],["4",".",".","8",".","3",".",".","1"],["7",".",".",".","2",".",".",".","6"],[".","6",".",".",".",".","2","8","."],[".",".",".","4","1","9",".",".","5"],[".",".",".",".","8",".",".","7","9"]]
[["9","3",".",".","7",".",".",".","."],["6",".",".","1","9","5",".",".","."],[".","9","8",".",".",".",".","6","."],["8",".",".",".","6",".",".",".","3"],["4",".",".","8",".","3",".",".","1"],["7",".",".",".","2",".",".",".","6"],[".","6",".",".",".",".","2","8","."],[".",".",".","4","1","9",".",".","5"],[".",".",".",".","8",".",".","7","9"]]
[[".",".",".",".","5",".",".","1","."],[".","4",".","3",".",".",".",".","."],[".",".",".",".",".","3",".",".","1"],["8",".",".",".",".",".",".","2","."],[".",".","2",".","7",".",".",".","."],[".","1","5",".",".",".",".",".","."],[".",".",".",".",".","2",".",".","."],[".","2",".","9",".",".",".",".","."],[".",".","4",".",".",".",".",".","."]]
*/

class Solution {
class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        map<int, int> mymap;

        // 一行
        for (int i=0; i<9; i++) {
            for (int j=0; j<9; j++) {
                if (board[i][j]>='1' && board[i][j] <='9') {
                    if (mymap.count(board[i][j]) > 0) {
                        return false;
                    }
                    mymap[board[i][j]] = 1;
                }
            }
            mymap.clear();
        }

        // 一列
        for (int j=0; j<9; j++) {
            for (int i=0; i<9; i++) {
                if (board[i][j]>='1' && board[i][j] <='9') {
                    if (mymap.count(board[i][j]) > 0) {
                        return false;
                    }
                    mymap[board[i][j]] = 1;
                }
            }
            mymap.clear();
        }

        for (int x=0; x<9; x=x+3) {
            for (int y=0; y<9; y=y+3) {
                for (int i=0; i<3; i++) {
                    for (int j=0; j<3; j++) {
                        if (board[i+x][j+y]>='1' && board[i+x][j+y] <='9') {
                            if (mymap.count(board[i+x][j+y]) > 0) {
                                return false;
                            }
                            mymap[board[i+x][j+y]] = 1;
                        }
                    }
                }
                mymap.clear();
            }
        }
        return true;
    }
};
